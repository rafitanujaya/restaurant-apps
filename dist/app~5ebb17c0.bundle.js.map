{"version":3,"file":"app~5ebb17c0.bundle.js","mappings":";0aACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,0lBAoFA,QA3Ee,CACPC,OAAM,WAAG,wPAKf,EAEMC,YAAW,WAAG,+GACmC,OAA/CC,EAAMC,EAAAA,EAAAA,gCAAyC,SACxBC,EAAAA,EAAAA,YAA6BF,EAAIG,IAAG,OAA3DC,EAAiB,EAAH,KACdC,EAASD,EAAeE,YACxBC,EAAiBC,SAASC,cAAc,kBAC/BC,WAAYC,EAAAA,EAAAA,IAA0BN,GAErDE,EAAeG,WAAa,8CAItBE,EAAcJ,SAASC,cAAc,iBAC3CJ,EAAOQ,gBAAgBC,SAAQ,SAACC,GAC9BH,EAAYF,YAAaM,EAAAA,EAAAA,IAA0BD,EACrD,IAEAE,EAAAA,EAAAA,KAA6B,CAC3BC,wBAAyBV,SAASC,cAAc,4BAChDU,oBAAqBC,EAAAA,EACrBd,WAAY,CACVH,GAAIE,EAAOF,GACXkB,KAAMhB,EAAOgB,KACbC,KAAMjB,EAAOiB,KACbC,YAAalB,EAAOkB,YACpBC,UAAWnB,EAAOmB,UAClBC,OAAQpB,EAAOoB,UAIEjB,SAASC,cAAc,iBAC/BiB,iBAAiB,SAAS,SAACC,GACtCA,EAAMC,iBACN,IAAMC,EAAerB,SAASC,cAAc,iBAAiBqB,MACvDC,EAAavB,SAASC,cAAc,YAAYqB,MAChDE,EAAiBxB,SAASyB,cAAc,OACxCC,EAAkB1B,SAASC,cAAc,WAE/C,GAAqB,KAAjBoB,GAAsC,KAAfE,EAAmB,CAC5C,IAAMI,EAAa,CACjBhC,GAAIE,EAAOF,GACXkB,KAAMQ,EACNd,OAAQgB,GAGV7B,EAAAA,EAAAA,UAA2BiC,GAAYC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IACtEF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZP,EAAeU,UAAUC,IAAI,UAC7BX,EAAetB,WAAa,qDAAJ,OAEHmB,EAAY,8CAAqC,IAAIe,MAAOC,eAAc,qDAE1Fd,EAAU,oBAEfG,EAAgBY,YAAYd,EAC9B,IAAE,OACK,SAACe,GACNP,QAAQO,MAAMA,EAChB,GACJ,MAEEP,QAAQO,MAAM,+BAElB,IAAG,2CA/De,EAgEpB","sources":["webpack://restaurant-apps/./src/scripts/views/pages/detail.js"],"sourcesContent":["import UrlParser from '../../routes/url-parser';\r\nimport RestaurantSource from '../../data/restaurant-source';\r\nimport { createRestoDetailTemplate, createRestoReviewTemplate } from '../templates/template-creator';\r\nimport FavoriteButtonInitiator from '../../utils/favorite-button-initiator';\r\nimport FavoriteRestaurantDB from '../../data/favorite-restaurant-idb';\r\n\r\nimport '../../component/RestoDetail';\r\nimport '../../component/RestoReview';\r\nimport '../../component/ReviewForm';\r\n\r\nconst Detail = {\r\n  async render() {\r\n    return `\r\n      <resto-detail></resto-detail>\r\n      <review-form></review-form>\r\n    `;\r\n  },\r\n\r\n  async afterRender() {\r\n    const url = UrlParser.parseActiveUrlWithoutCombiner();\r\n    const restaurantById = await RestaurantSource.detailResto(url.id);\r\n    const detail = restaurantById.restaurant;\r\n    const restoContainer = document.querySelector('#resto-detail');\r\n    restoContainer.innerHTML = createRestoDetailTemplate(detail);\r\n\r\n    restoContainer.innerHTML += `\r\n      <resto-review></resto-review>\r\n    `;\r\n\r\n    const restoReview = document.querySelector('#resto-review');\r\n    detail.customerReviews.forEach((review) => {\r\n      restoReview.innerHTML += createRestoReviewTemplate(review);\r\n    });\r\n\r\n    FavoriteButtonInitiator.init({\r\n      favoriteButtonContainer: document.querySelector('#favoriteButtonContainer'),\r\n      favoriteRestaurants: FavoriteRestaurantDB,\r\n      restaurant: {\r\n        id: detail.id,\r\n        name: detail.name,\r\n        city: detail.city,\r\n        description: detail.description,\r\n        pictureId: detail.pictureId,\r\n        rating: detail.rating,\r\n      },\r\n    });\r\n\r\n    const reviewButton = document.querySelector('#submitReview');\r\n    reviewButton.addEventListener('click', (event) => {\r\n      event.preventDefault();\r\n      const customerName = document.querySelector('#customerName').value;\r\n      const userReview = document.querySelector('#reviews').value;\r\n      const customerReview = document.createElement('div');\r\n      const containerReview = document.querySelector('.review');\r\n\r\n      if (customerName !== '' || userReview !== '') {\r\n        const reviewData = {\r\n          id: detail.id,\r\n          name: customerName,\r\n          review: userReview,\r\n        };\r\n\r\n        RestaurantSource.addReview(reviewData).then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            customerReview.classList.add('review');\r\n            customerReview.innerHTML += `\r\n            <p>\r\n            <span class=\"name\">${customerName}</span> &bull; <span class=\"date\">${new Date().toDateString()}</span>\r\n            </p>\r\n            <p>${userReview}</p>\r\n          `;\r\n            containerReview.appendChild(customerReview);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      } else {\r\n        // memberikan pesan error jika salah satu field kosong\r\n        console.error('Nama dan ulasan harus diisi!');\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["i","render","afterRender","url","UrlParser","RestaurantSource","id","restaurantById","detail","restaurant","restoContainer","document","querySelector","innerHTML","createRestoDetailTemplate","restoReview","customerReviews","forEach","review","createRestoReviewTemplate","FavoriteButtonInitiator","favoriteButtonContainer","favoriteRestaurants","FavoriteRestaurantDB","name","city","description","pictureId","rating","addEventListener","event","preventDefault","customerName","value","userReview","customerReview","createElement","containerReview","reviewData","then","response","json","data","console","log","classList","add","Date","toDateString","appendChild","error"],"sourceRoot":""}